import telebot
from telebot import types
from user import User
from admin import Admin
import psycopg2, re
import requests, tempfile
from API_modul import APIModule
import os


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
conn = psycopg2.connect(
    dbname='cobook_db',
    user='postgres',
    password='',
    host='localhost',
    port='5432'
)

TOKEN = "6952946591:AAHdXTymUStAGFKiiXS-O_WeFEPF2yA5e30"
bot = telebot.TeleBot(TOKEN)
api_key = "cddf22cd9bmshad6e03418d2edcep141e40jsn38428a79a6b5"
# –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
cursor = conn.cursor()

# –ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
create_users_table = '''
CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255),
    password VARCHAR(255),
    chat_id VARCHAR(255)
);
'''

cursor.execute(create_users_table)
conn.commit()

# –ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–π –∫–Ω–∏–≥–∏
create_recipes_table = '''
CREATE TABLE IF NOT EXISTS recipes (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255),
    description TEXT,
    photo_url VARCHAR(255),
    user_id INTEGER REFERENCES users(id)
);
'''

cursor.execute(create_recipes_table)
conn.commit()

create_recipes_table_on_moderation = '''
CREATE TABLE IF NOT EXISTS recipes_on_moderation (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255),
    description TEXT,
    photo_url VARCHAR(255),
    user_id INTEGER REFERENCES users(id),
    approved BOOLEAN,
    chat_id VARCHAR(255)
);
'''
def request_to_api():
    api_module = APIModule(api_key, conn, cursor)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API
    recipes_data = api_module.fetch_recipes(query='food')

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ CSV
    csv_filename = api_module.convert_to_csv(recipes_data)

    # –ó–∞–≥—Ä—É–∑–∫–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    api_module.add_recipes_to_database(csv_filename)
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ

cursor.execute(create_recipes_table_on_moderation)
request_to_api()

conn.commit()
#—Å–æ–∑–¥–∞–Ω–∏–µ  –ø—É—Å—Ç—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
user = User(None, None, None, None, None)
admin = Admin(None, None, None, None, None)
TOKEN = "6952946591:AAHdXTymUStAGFKiiXS-O_WeFEPF2yA5e30"
bot = telebot.TeleBot(TOKEN)
#—Å—Ç–∞—Ä—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = menu_status1(message)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}!'.format(message.from_user), reply_markup = markup)
#–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –º–µ–Ω—é
def menu_status1(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚úèÔ∏è")
    item2 = types.KeyboardButton('–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç üë§')
    item3 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚ÑπÔ∏è")
    markup.add(item1, item2, item3)
    return markup
#–í–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
def menu_status2(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã üçî")
    item2 = types.KeyboardButton('–ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–∞ üìã')
    item3 = types.KeyboardButton('–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ üö™')
    item4 = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
    markup.add(item1, item2, item3, item4)
    return markup
def menu_status3(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–†–µ—Ü–µ–ø—Ç—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ üìï")
    item2 = types.KeyboardButton('–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ üö™')
    item3 = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
    markup.add(item1,item2, item3)
    return markup

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == "private":
        if message.text == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚úèÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
            markup.add(back)
            bot.send_message(message.chat.id,"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚úèÔ∏è", reply_markup = markup)
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:")
            bot.register_next_step_handler(message, process_login_step)
        elif message.text == "–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç üë§":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
            markup.add(back)
            bot.send_message(message.chat.id, "–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç üë§Ô∏è", reply_markup=markup)
            #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user.username:
                bot.send_message(message.chat.id, "–í—ã —É–∂–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç")
            else:
                bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:")
                bot.register_next_step_handler(message, handler_login_step)
        elif message.text == "–ù–∞–∑–∞–¥ ‚óÄÔ∏è":
            if user.username:
                markup = menu_status2(message)
            elif admin.username:
                markup = menu_status3(message)
            else:
                markup = menu_status1(message)
            bot.send_message(message.chat.id,"–ù–∞–∑–∞–¥ ‚óÄÔ∏è", reply_markup = markup)
        elif message.text == "–ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã üçî":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é üìç")
            item2 = types.KeyboardButton('–†–µ—Ü–µ–ø—Ç—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ üë§')
            markup.add(item1, item2)
            bot.send_message(message.chat.id,"–ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã üçî", reply_markup = markup)
        elif message.text == "–†–µ—Ü–µ–ø—Ç—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ üë§":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
            markup.add(back)
            send_recipes_on_moderation_for_user(message)
        elif message.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é üìç":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
            markup.add(back)
            bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é üìç", reply_markup=markup)
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–µ—Ü–µ–ø—Ç–∞:")
            bot.register_next_step_handler(message, lambda msg: handler_recipe_step(msg, user))
        elif message.text == "–ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–∞ üìã":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
            markup.add(back)
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–µ—Ü–µ–ø—Ç–∞:")
            bot.register_next_step_handler(message, process_search)
        elif message.text == "–†–µ—Ü–µ–ø—Ç—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ üìï":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
            markup.add(back)
            bot.send_message(message.chat.id,"–†–µ—Ü–µ–ø—Ç—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ üìï", reply_markup = markup)
            send_recipes_on_moderation(message)
        elif message.text == "–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ üö™":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
            markup.add(back)
            log_out_from_account(message)
            bot.send_message(message.chat.id,"–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ üö™", reply_markup = markup)
#–§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
def log_out_from_account(message):
    global user, admin
    if user.username:
        user = User(None, None, None, None, None)
    elif admin.username:
        admin = Admin(None, None, None, None, None)
    bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞")
#–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def send_recipes_on_moderation_for_user(message):
    admin_panel_recipes = user.check_recipes_on_moderation()
    for recipe in admin_panel_recipes:
        id, title, description, photo_url = recipe
        message_text = f"*{title}*\n{description}"

        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(delete=False) as temp_file:
            temp_file.write(requests.get(photo_url).content)
            temp_file.seek(0)  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
            bot.send_photo(chat_id=message.chat.id, photo=temp_file, caption=message_text, parse_mode='Markdown')
#–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
def send_recipes_on_moderation(message):
    admin_panel_recipes = admin.check_recipes_on_moderation()
    for recipe in admin_panel_recipes:
        id, title, description, photo_url = recipe
        message_text = f"*{title}*\n{description}"

        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(delete=False) as temp_file:
            temp_file.write(requests.get(photo_url).content)
            temp_file.seek(0)  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
            bot.send_photo(chat_id=message.chat.id, photo=temp_file, caption=message_text, parse_mode='Markdown')
    admin_panel(message)
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
def admin_panel(message):
    recipes_on_moderation = admin.check_recipes_on_moderation()

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup = types.ReplyKeyboardMarkup(row_width=2)
    for recipe in recipes_on_moderation:
        recipe_id, title, description, photo_url = recipe
        markup.add(types.KeyboardButton(f"{recipe_id}: {title}"))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í—ã—Ö–æ–¥"
    markup.add(types.KeyboardButton("–í—ã—Ö–æ–¥"))

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç—ã –¥–ª—è —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:", reply_markup=markup)

    bot.register_next_step_handler(message, process_admin_choice)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º

def process_admin_choice(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–í—ã—Ö–æ–¥"
    if message.text == "–í—ã—Ö–æ–¥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
        markup.add(back)
        bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞", reply_markup=markup)
        bot.register_next_step_handler(message, process_admin_exit)
        return

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —á–∏—Å–µ–ª –∏–∑ –≤–≤–æ–¥–∞
    choices = re.findall(r'\d+', message.text)
    approved_recipes = [int(choice) for choice in choices]

    # –î–æ–±–∞–≤–ª—è–µ–º —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    for recipe_id in approved_recipes:
        answer, chat_id = admin.insert_approved_recipe(recipe_id)
        bot.send_message(chat_id, answer)
    # –ü–æ–≤—Ç–æ—Ä—è–µ–º –≤—ã–∑–æ–≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
    admin_panel(message)
#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –í—ã—Ö–æ–¥ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
def process_admin_exit(message):
    if message.text == "–†–µ—Ü–µ–ø—Ç—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏":
        # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        recipes_on_moderation = admin.check_recipes_on_moderation()
        response = "–†–µ—Ü–µ–ø—Ç—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:\n"
        for recipe in recipes_on_moderation:
            recipe_id, title = recipe
            response += f"{recipe_id}: {title}\n"

        bot.send_message(message.chat.id, response)
    elif message.text == "–í—ã—Ö–æ–¥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")
        markup.add(back)
        bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞", reply_markup=markup)

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
def process_search(message):
    search_query = message.text
    # –ò—â–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    search_results = user.serch_recipes(search_query)

    if search_results:
        for recipe in search_results:
            id, title, description, photo_url = recipe
            message_text = f"*{title}*\n{description}"

            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Å—Å—ã–ª–∫–∏
            is_telegram_link = photo_url.startswith('https://api.telegram.org/file/bot')

            # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            try:
                if is_telegram_link:
                    # –°—Å—ã–ª–∫–∞ –∏–∑ Telegram
                    file_path = photo_url.split('/')[-1]
                    image_content = requests.get(photo_url).content
                else:
                    # –°—Å—ã–ª–∫–∞ –∏–∑ –¥—Ä—É–≥–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
                    image_content = requests.get(photo_url).content
            except requests.exceptions.RequestException as e:
                print(f"Error downloading image: {e}")
                continue  # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ—Ü–µ–ø—Ç –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É

            # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            with tempfile.TemporaryDirectory() as temp_dir:
                temp_file_path = os.path.join(temp_dir, "recipe_image.jpg")
                with open(temp_file_path, 'wb') as temp_file:
                    temp_file.write(image_content)

                # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                with open(temp_file_path, 'rb') as photo_file:
                    try:
                        bot.send_photo(chat_id=message.chat.id, photo=photo_file, caption=None, parse_mode='Markdown')
                        bot.send_message(chat_id=message.chat.id, text=message_text, parse_mode='Markdown')

                    except telebot.apihelper.ApiTelegramException as e:
                        print(f"Telegram API Error: {e}")


#–≠—Ç–∞–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏ —Ñ–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def handler_recipe_step(message, user):
    title = message.text
    # –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç user –≤–º–µ—Å—Ç–µ —Å title
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞:")
    bot.register_next_step_handler(message, lambda msg: handler_recipe_description_step(msg, title, user))

def handler_recipe_description_step(message, title, user):
    description = message.text
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∫ —Ä–µ—Ü–µ–ø—Ç—É:")
    bot.register_next_step_handler(message, handler_recipe_photo_step, title=title, description=description, user=user)

def handler_recipe_photo_step(message, title, description, user):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
    if message.content_type == 'photo':
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç PhotoSize, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        photo = message.photo[-1]

        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç File –ø–æ –µ–≥–æ ID
        file_info = bot.get_file(photo.file_id)

        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª
        file_url = f'https://api.telegram.org/file/bot{TOKEN}/{file_info.file_path}'
        user.send_recipe_for_moderation(title, description, file_url, message.chat.id)
        bot.send_message(message.chat.id, f"–í–∞—à –†–µ—Ü–µ–ø—Ç '{title}' –ø—Ä–æ—Ö–æ–¥–∏—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é, –º—ã —Å–æ–æ–±—â–∏–º –∫–æ–≥–¥–∞ –æ–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω!")
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∫ —Ä–µ—Ü–µ–ø—Ç—É.")
        bot.register_next_step_handler(message, handler_recipe_photo_step, title=title, description=description, user=user)
#–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–æ–ª—è –≤–≤–µ–¥–µ–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def handler_login_step(message):
    login = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
    bot.register_next_step_handler(message, handler_password_step, login)
#–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def handler_password_step(message, login):
    global user, admin
    password = message.text

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    check_account_query = "SELECT * FROM users WHERE username = %s AND password = %s;"
    cursor.execute(check_account_query, (login, password))
    account = cursor.fetchone()

    if login == "admin" and password == "admin":
        user_id = account[0]
        admin = Admin(user_id, login, password, conn, cursor)
        markup = menu_status3(message)
        bot.send_message(message.chat.id, f"–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å–≤–æ–≤–∞—Ç—å admin!", reply_markup=markup)
    elif account:
        # –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω
        user_id = account[0]
        user = User(user_id, login, password, conn, cursor)
        bot.send_message(message.chat.id, f"–í—ã –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç!")
        markup = menu_status2(message)
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {login}!', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, f"–ù–µ —É–¥–∞–µ—Ç—Å—è –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç —Å –ª–æ–≥–∏–Ω–æ–º {login}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")

# –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def process_login_step(message):
    login = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_id = message.chat.id

    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
    bot.register_next_step_handler(message, process_password_step, login, chat_id)
def process_password_step(message, login, chat_id):
    password = message.text

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    insert_user_query = "INSERT INTO users (username, password, chat_id) VALUES (%s, %s, %s);"
    cursor.execute(insert_user_query, (login, password, chat_id))
    conn.commit()

    bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ª–æ–≥–∏–Ω–æ–º {login} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")


try:
    bot.polling(none_stop=True)
finally:
    # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ª—É—á–∞–µ –ª—é–±—ã—Ö –æ—à–∏–±–æ–∫
    cursor.close()
    conn.close()